/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package signals1.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import signals1.gui.inputForms.DiscreetSignalsPanel;
import signals1.gui.inputForms.NoiseInputPanel;
import signals1.gui.inputForms.SineInputPanel;
import signals1.gui.inputForms.SquareInputPanel;
import signals1.gui.tables.DiscreteSignalTableModel;
import signals1.gui.tables.VirtualSignalsTableModel;
import signals1.operations.AmplitudeCalculator;
import signals1.continuousSignals.abstracts.NonPeriodicSignals;
import signals1.continuousSignals.abstracts.PeriodicSignals;
import signals1.continuousSignals.abstracts.Signals;
import signals1.converter.Converters;
import signals1.converter.D2AConverterService;
import signals1.discreteSignals.abstracts.DiscreteSignal;
import signals1.discreteSignals.NonPeriodicDiscreteSignal;
import signals1.discreteSignals.PeriodicDiscreteSignal;
import signals1.tools.DiscretetSignalsContainer;
import signals1.tools.SignalContainer;
import signals1.tools.constatns.Quantizers;
import signals1.tools.exceptions.DivideByZeroValueExcpetion;
import signals1.tools.exceptions.NotSameSamplinRateExpcetion;

/**
 *
 * @author marr
 */
public class MainWindow extends javax.swing.JFrame {

    private Dimension inputFormDimension = new Dimension(400, 320);
    private SineInputPanel sineInputPanel;
    private NoiseInputPanel noiseInputPanel;
    private SquareInputPanel squareInputPanel;
    private DiscreetSignalsPanel discreetPanel;
    private SignalContainer signalContainer = SignalContainer.getInstance();
    private DiscretetSignalsContainer disSignalContainer = DiscretetSignalsContainer.getInstance();
    private VirtualSignalsTableModel virtulTableModel = new VirtualSignalsTableModel();
    private DiscreteSignalTableModel discreteTableModel = new DiscreteSignalTableModel();
    private FileChooserDialog fileDialog;
    private static MainWindow instance = null;

    /**
     * Creates new form NewJFrame
     */
    public MainWindow() {

        initLookAndFeel();
        initComponents();
        initInputForms();
        setUpVirtualTable();
        setUpDiscreteTable();
        fileDialog = new FileChooserDialog(this, true);
        fileDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                fileDialog.setVisible(false);
            }
        });
        instance = this;
    }

    public static MainWindow getInstance() {
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPaneTabs = new javax.swing.JTabbedPane();
        jPanelSineSignals = new javax.swing.JPanel();
        jButtonGenerateSignal = new javax.swing.JButton();
        jSliderHistNo = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVirtual = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jTextSamplingRate = new javax.swing.JTextField();
        jButtonSampling = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDiscrete = new javax.swing.JTable();
        jButtonShowSignal = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jButtonClearVirtualTable = new javax.swing.JButton();
        jButtonClearDiscreteTable1 = new javax.swing.JButton();
        jCheckBoxOperationOrder = new javax.swing.JCheckBox();
        jComboQType = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboQuantBits = new javax.swing.JComboBox<>();
        jButtonSampling1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboConvType1 = new javax.swing.JComboBox<>();
        jButtonCompare = new javax.swing.JButton();
        jButtonAddSignals = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sygnały");
        setResizable(false);

        jPaneTabs.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPaneTabs.setPreferredSize(new java.awt.Dimension(420, 320));

        jPanelSineSignals.setPreferredSize(inputFormDimension);

        javax.swing.GroupLayout jPanelSineSignalsLayout = new javax.swing.GroupLayout(jPanelSineSignals);
        jPanelSineSignals.setLayout(jPanelSineSignalsLayout);
        jPanelSineSignalsLayout.setHorizontalGroup(
            jPanelSineSignalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 425, Short.MAX_VALUE)
        );
        jPanelSineSignalsLayout.setVerticalGroup(
            jPanelSineSignalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
        );

        jPaneTabs.addTab("Typ Sygnału", jPanelSineSignals);

        jButtonGenerateSignal.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jButtonGenerateSignal.setText("Generuj Sygnał Pseudociągły");
        jButtonGenerateSignal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateSignalActionPerformed(evt);
            }
        });

        jSliderHistNo.setMajorTickSpacing(5);
        jSliderHistNo.setMaximum(20);
        jSliderHistNo.setMinimum(5);
        jSliderHistNo.setMinorTickSpacing(5);
        jSliderHistNo.setPaintLabels(true);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("liczba przedziałów histogramu");

        jTableVirtual.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTableVirtual.setModel(virtulTableModel);
        jTableVirtual.setDragEnabled(true);
        jTableVirtual.setRowHeight(18);
        jTableVirtual.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableVirtual);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel1.setText("Wygenerowane sygnały pseudociągłe");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Częstotliwośc próbkowania[Hz]");

        jTextSamplingRate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextSamplingRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSamplingRate.setText("128");
        jTextSamplingRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSamplingRateActionPerformed(evt);
            }
        });

        jButtonSampling.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jButtonSampling.setText("Próbkuj sygnał");
        jButtonSampling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSamplingActionPerformed(evt);
            }
        });

        jTableDiscrete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTableDiscrete.setModel(discreteTableModel);
        jTableDiscrete.setRowHeight(18);
        jTableDiscrete.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(jTableDiscrete);

        jButtonShowSignal.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jButtonShowSignal.setText("Wyświetl sygnał");
        jButtonShowSignal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowSignalActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Próbkowanie Sygnałów");

        jButtonClearVirtualTable.setText("Wyczyść");
        jButtonClearVirtualTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearVirtualTableActionPerformed(evt);
            }
        });

        jButtonClearDiscreteTable1.setText("Wyczyść");
        jButtonClearDiscreteTable1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearDiscreteTable1ActionPerformed(evt);
            }
        });

        jCheckBoxOperationOrder.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBoxOperationOrder.setText("Odwróć kolejność");

        jComboQType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboQType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brak kwantyzacji", "Kwantyzacja równomierna z obcięciem", "Kwantyzacja równomierna z zaokrąglaniem" }));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel6.setText("Typ kwantyzacji");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setText("Liczba bitów kwantyzacji");

        jComboQuantBits.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboQuantBits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "4", "6", "8", "12", "16", " " }));
        jComboQuantBits.setSelectedIndex(4);
        jComboQuantBits.setToolTipText("");

        jButtonSampling1.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jButtonSampling1.setText("Konwertuj");
        jButtonSampling1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSampling1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel9.setText("Typ konwersji");

        jComboConvType1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboConvType1.setModel(new DefaultComboBoxModel(Converters.Types.values()));
        jComboConvType1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboConvType1ActionPerformed(evt);
            }
        });

        jButtonCompare.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButtonCompare.setText("Porównaj sygnały");
        jButtonCompare.setActionCommand("loadSignal");
        jButtonCompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompareActionPerformed(evt);
            }
        });

        jButtonAddSignals.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButtonAddSignals.setText("+");
        jButtonAddSignals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSignalsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Operacje na sygnałach");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPaneTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(177, 177, 177)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonClearVirtualTable, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jButtonGenerateSignal, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonClearDiscreteTable1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jComboQuantBits, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonSampling)
                                        .addGap(12, 12, 12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboQType, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboConvType1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonSampling1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSliderHistNo, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonShowSignal, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(jCheckBoxOperationOrder)
                                    .addComponent(jButtonCompare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextSamplingRate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonAddSignals, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(314, 314, 314))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPaneTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonGenerateSignal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jButtonClearVirtualTable)))
                .addGap(11, 11, 11)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextSamplingRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddSignals, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboConvType1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addComponent(jComboQType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jComboQuantBits, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(jButtonSampling, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonSampling1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(9, 9, 9)
                                .addComponent(jCheckBoxOperationOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonCompare, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonShowSignal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSliderHistNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonClearDiscreteTable1)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGenerateSignalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateSignalActionPerformed
        Signals signal = null;
//        switch (jPaneTabs.getSelectedIndex()) {
//            case 1:
//                signal = sineInputPanel.getSingal();
//                break;
//            case 2:
//                signal = squareInputPanel.getSingal();
//                break;
//            case 3:
//                DiscreteSignal sig = discreetPanel.getSingal();
//                disSignalContainer.add(sig);
//                discreteTableModel.fireTableDataChanged();
//                break;
//            default:
//                signal = noiseInputPanel.getSingal();
//        }
        signal = sineInputPanel.getSingal();
        if (signal != null) {
            signalContainer.add(signal);
            virtulTableModel.fireTableDataChanged();
        }
    }//GEN-LAST:event_jButtonGenerateSignalActionPerformed

    private void jButtonSamplingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSamplingActionPerformed
        int selectedVirtualSignal = jTableVirtual.getSelectedRow();
        if (selectedVirtualSignal < 0) {
            return;
        }
        int sampling = Integer.parseInt(jTextSamplingRate.getText());
        Signals virtualSignal = signalContainer.getById(getIdFromVirtualTable(selectedVirtualSignal));
        if (virtualSignal == null) {
            return;
        }
        if (virtualSignal instanceof PeriodicSignals) {
            disSignalContainer.add(new PeriodicDiscreteSignal((PeriodicSignals) virtualSignal, sampling, Quantizers.getQuantizer(jComboQType.getSelectedIndex(), Integer.parseInt((String) jComboQuantBits.getSelectedItem()))));
        } else if (virtualSignal instanceof NonPeriodicSignals) {
            disSignalContainer.add(new NonPeriodicDiscreteSignal((NonPeriodicSignals) virtualSignal, sampling, Quantizers.getQuantizer(jComboQType.getSelectedIndex(), Integer.parseInt((String) jComboQuantBits.getSelectedItem()))));
        }
        discreteTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonSamplingActionPerformed

    private void jButtonShowSignalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowSignalActionPerformed
        int selectedDiscreteSignal = jTableDiscrete.getSelectedRow();
        if (selectedDiscreteSignal < 0) {
            return;
        }

        DiscreteSignal signal = disSignalContainer.getById(getIdFromDiscreteTable(selectedDiscreteSignal));
        if (signal == null) {
            return;
        }

        AmplitudePanel amPanel = new AmplitudePanel(signal, false);
        AmplitudePanel modAndShiftPanel = new AmplitudePanel(signal, true);
        HistogramPanel hisPanel = new HistogramPanel(signal.getHistogram(jSliderHistNo.getValue()), jSliderHistNo.getValue());
        HistogramPanel hisModAndShiftPanel = new HistogramPanel(signal.getHistogramModAndShift(jSliderHistNo.getValue()), jSliderHistNo.getValue());
        OutputWindow outputWindow = new OutputWindow(signal, amPanel, hisPanel, modAndShiftPanel, hisModAndShiftPanel);
        outputWindow.setVisible(true);
    }//GEN-LAST:event_jButtonShowSignalActionPerformed

    private void jButtonClearVirtualTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearVirtualTableActionPerformed
        signalContainer.clear();
        virtulTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonClearVirtualTableActionPerformed

    private void jButtonClearDiscreteTable1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearDiscreteTable1ActionPerformed
        disSignalContainer.clear();
        discreteTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonClearDiscreteTable1ActionPerformed

    private void jTextSamplingRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSamplingRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSamplingRateActionPerformed

    private void jButtonSampling1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSampling1ActionPerformed
        int selectedDiscreteSignal = jTableDiscrete.getSelectedRow();
        if (selectedDiscreteSignal < 0) {
            return;
        }
        DiscreteSignal signal = disSignalContainer.getById(getIdFromDiscreteTable(selectedDiscreteSignal));
        if (signal == null) {
            return;
        }

        int sampling = Integer.parseInt(jTextSamplingRate.getText());

        D2AConverterService service = new D2AConverterService(new Converters((Converters.Types) jComboConvType1.getSelectedItem()).getConverter(), signal, sampling);
        addDiscreteSignal(service.getOutput());

    }//GEN-LAST:event_jButtonSampling1ActionPerformed

    private void jComboConvType1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboConvType1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboConvType1ActionPerformed

    private void jButtonCompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompareActionPerformed
        if (jTableDiscrete.getSelectedRowCount() != 2) {
            return;
        }
        int[] signals = new int[2];
        if (jCheckBoxOperationOrder.isSelected()) {
            signals[0] = getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[0]);
            signals[1] = getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[1]);
        } else {
            signals[1] = getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[0]);
            signals[0] = getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[1]);

        }
        CompareDialog compare = new CompareDialog(signals[0], signals[1]);
        compare.setVisible(true);

    }//GEN-LAST:event_jButtonCompareActionPerformed

    private void jButtonAddSignalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSignalsActionPerformed
        DiscreteSignal[] signals = getSignalsForCalculation();
        if (signals != null) {
            try {
                disSignalContainer.add(AmplitudeCalculator.addSignals(signals[0], signals[1]));
                discreteTableModel.fireTableDataChanged();
            } catch (NotSameSamplinRateExpcetion ex) {
                JOptionPane.showMessageDialog(this, "Wybierz sygnały o takiej samej częstotliwości próbkowania", "Błąd", JOptionPane.ERROR_MESSAGE);
            } finally {
                discreteTableModel.fireTableDataChanged();
            }
        }
    }//GEN-LAST:event_jButtonAddSignalsActionPerformed

    private void initInputForms() {
        sineInputPanel = new SineInputPanel(inputFormDimension);
        noiseInputPanel = new NoiseInputPanel(inputFormDimension);
        squareInputPanel = new SquareInputPanel(inputFormDimension);
        discreetPanel = new DiscreetSignalsPanel(inputFormDimension);

        jPanelSineSignals.setLayout(new java.awt.BorderLayout());
        jPanelSineSignals.add(sineInputPanel, BorderLayout.CENTER);
//        jPanelNoiseSignals.setLayout(new java.awt.BorderLayout());
//        jPanelNoiseSignals.add(noiseInputPanel, BorderLayout.CENTER);
//        jPanelSquareSignals.setLayout(new java.awt.BorderLayout());
//        jPanelSquareSignals.add(squareInputPanel, BorderLayout.CENTER);
//        jPanelDiscreteSignals.setLayout(new java.awt.BorderLayout());
//        jPanelDiscreteSignals.add(discreetPanel, BorderLayout.CENTER);

        jPanelSineSignals.validate();
//        jPanelNoiseSignals.validate();
//        jPanelSquareSignals.validate();
//        jPanelDiscreteSignals.validate();
    }

    private void setUpVirtualTable() {
        jTableVirtual.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableVirtual.getColumnModel().getColumn(1).setPreferredWidth(175);
        jTableVirtual.getColumnModel().getColumn(2).setPreferredWidth(115);
        jTableVirtual.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableVirtual.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTableVirtual.getColumnModel().getColumn(5).setPreferredWidth(60);
        jTableVirtual.getColumnModel().getColumn(5).setPreferredWidth(95);
    }

    private void setUpDiscreteTable() {
        jTableDiscrete.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableDiscrete.getColumnModel().getColumn(1).setPreferredWidth(175);
        jTableDiscrete.getColumnModel().getColumn(2).setPreferredWidth(115);
        jTableDiscrete.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableDiscrete.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTableDiscrete.getColumnModel().getColumn(5).setPreferredWidth(60);
    }

    private static void initLookAndFeel() {
        String lookAndFeel = null;
        lookAndFeel = UIManager.getSystemLookAndFeelClassName();
        try {
            UIManager.setLookAndFeel(lookAndFeel);
        } catch (ClassNotFoundException | UnsupportedLookAndFeelException e) {
        } catch (Exception e) {
            //TODO :)
        }
    }

    private int getIdFromDiscreteTable(int row) {
        return (int) jTableDiscrete.getModel().getValueAt(row, 0);
    }

    private int getIdFromVirtualTable(int row) {
        return (int) jTableVirtual.getModel().getValueAt(row, 0);
    }

    private DiscreteSignal getSelectedSignal() {
        DiscreteSignal signal = disSignalContainer.getById(getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[0]));
        return signal;
    }

    private DiscreteSignal[] getSignalsForCalculation() {
        if (jTableDiscrete.getSelectedRowCount() != 2) {
            return null;
        }
        DiscreteSignal[] signals = new DiscreteSignal[2];
        if (jCheckBoxOperationOrder.isSelected()) {
            signals[0] = disSignalContainer.getById(getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[0]));
            signals[1] = disSignalContainer.getById(getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[1]));
        } else {
            signals[1] = disSignalContainer.getById(getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[0]));
            signals[0] = disSignalContainer.getById(getIdFromDiscreteTable(jTableDiscrete.getSelectedRows()[1]));

        }
        return signals;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddSignals;
    private javax.swing.JButton jButtonClearDiscreteTable1;
    private javax.swing.JButton jButtonClearVirtualTable;
    private javax.swing.JButton jButtonCompare;
    private javax.swing.JButton jButtonGenerateSignal;
    private javax.swing.JButton jButtonSampling;
    private javax.swing.JButton jButtonSampling1;
    private javax.swing.JButton jButtonShowSignal;
    private javax.swing.JCheckBox jCheckBoxOperationOrder;
    private javax.swing.JComboBox<String> jComboConvType1;
    private javax.swing.JComboBox<String> jComboQType;
    private javax.swing.JComboBox<String> jComboQuantBits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTabbedPane jPaneTabs;
    private javax.swing.JPanel jPanelSineSignals;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSlider jSliderHistNo;
    private javax.swing.JTable jTableDiscrete;
    private javax.swing.JTable jTableVirtual;
    private javax.swing.JTextField jTextSamplingRate;
    // End of variables declaration//GEN-END:variables

    public void addDiscreteSignal(DiscreteSignal loadSignal) {
        if (loadSignal != null) {
            disSignalContainer.add(loadSignal);
            discreteTableModel.fireTableDataChanged();
        }
    }
}
